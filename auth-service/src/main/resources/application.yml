server:
  port: 8081

spring:
  application:
    name: auth-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://backend-keycloak-auth:8080/realms/ArmeniaBank

  datasource:
    url: jdbc:postgresql://postgres:5432/auth_service
    username: auth_service
    password: auth_service
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

  liquibase:
    change-log: classpath:/db/migration/changelog.xml
    default-schema: auth_service
    clear-checksums: true

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  swagger-ui.operations-sorter: alpha
  swagger-configurations:
    - classpath:/openapi.yaml

kafka:
  topic:
    auth-events: auth-events

audit-service:
  url: http://audit-service:8082


keycloak:
  base-url: http://backend-keycloak-auth:8080
  token-uri: /realms/ArmeniaBank/protocol/openid-connect/token
  realm: ArmeniaBank
  client-id: auth-service
  client-secret: auth-service

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
